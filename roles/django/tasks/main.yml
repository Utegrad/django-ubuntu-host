---

- name: Import application vault variables
  include_vars: "{{ item }}"
  with_items:
    - "vault.yml"

- name: Create Django User
  become: True
  user:
    name: "{{ django_user }}"
    state: present
    create_home: yes
    password: "{{ django_user_password }}"

- name: Django user .ssh directory
  become: True
  become_user: "{{ django_user }}"
  file:
    path: ~/.ssh
    state: directory
    mode: '0700'

- name: Django User Deploy Key
  become: yes
  become_user: "{{ django_user }}"
  copy:
    src: deploy_key
    dest: ~/.ssh/id_rsa
    owner: "{{ django_user }}"
    mode: '0600'
    decrypt: yes

- name: Application Directory
  become: True
  become_user: "{{ django_user }}"
  file:
    path: "{{ application_path }}"
    state: directory
    mode: '0755'

- name: Checkout Git code
  become: True
  become_user: "{{ django_user }}"
  git:
    repo: "{{ git_repo }}"
    dest: "{{ git_dest }}"
    ssh_opts: "-o StrictHostKeyChecking=no"

- name: Install virtualenv
  become: True
  pip:
    name: virtualenv

- name: Create virtualenv
  become: True
  become_user: "{{ django_user }}"
  pip:
    requirements: "{{ git_dest }}/requirements.txt"
    virtualenv: "{{ git_dest }}/venv"
    virtualenv_python: "{{ virtualenv_python }}"

- name: django .env file
  become: True
  become_user: "{{ django_user }}"
  template:
    src: env.j2
    dest: "{{ application_settings_dir }}/.env"
    mode: '0644'
  notify: restart gunicorn

- name: gunicorn.service file
  become: True
  template:
    src: gunicorn.service.j2
    dest: /etc/systemd/system/gunicorn.service
    owner: root
    group: root
    mode: '0644'
  notify: restart gunicorn

- name: gunicorn.socket file
  become: True
  copy:
    src: gunicorn.socket
    dest: /etc/systemd/system/gunicorn.socket
    owner: root
    group: root
    mode: '0644'
  notify: restart gunicorn

- name: gunicorn enabled
  become: True
  systemd:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - gunicorn.socket
    - gunicorn.service

